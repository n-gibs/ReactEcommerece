{"ast":null,"code":"import CartActionTypes from './cart.types';\nimport { addItemToCart, removeItem } from './cart.utils';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case CartActionTypes.ADD_ITEM:\n      return { ...state,\n        //add items already in cart then new item to the end of the array from the payload\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.REMOVE_ITEM:\n      return { ...state,\n        cartItems: removeItem(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.REMOVE_ITEM_FROM_CART:\n      return { ...state,\n        //filter returns true or false\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      };\n\n    case CartActionTypes.CLEAR_CART:\n      return { ...state,\n        cartItem: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/nicolegibson/TrainingRepos/clothing-ecomm/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItem","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","REMOVE_ITEM","REMOVE_ITEM_FROM_CART","filter","cartItem","id","CLEAR_CART"],"mappings":"AACA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,aAAR,EAAuBC,UAAvB,QAAyC,cAAzC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAOA,MAAM,CAACC,IAAd;AAEE,SAAKT,eAAe,CAACU,kBAArB;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFV,OAAP;;AAKF,SAAKJ,eAAe,CAACW,QAArB;AACE,aAAO,EACL,GAAGJ,KADE;AAEL;AACAF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAHnB,OAAP;;AAMF,SAAKZ,eAAe,CAACa,WAArB;AACE,aAAM,EACJ,GAAGN,KADC;AAEJF,QAAAA,SAAS,EAAEH,UAAU,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFjB,OAAN;;AAKF,SAAKZ,eAAe,CAACc,qBAArB;AAEE,aAAO,EACL,GAAGP,KADE;AACK;AACVF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBU,MAAhB,CACTC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBT,MAAM,CAACI,OAAP,CAAeK,EADlC;AAFN,OAAP;;AAMF,SAAKjB,eAAe,CAACkB,UAArB;AACE,aAAM,EACJ,GAAGX,KADC;AAEJS,QAAAA,QAAQ,EAAE;AAFN,OAAN;;AAKF;AACE,aAAOT,KAAP;AApCJ;AAsCD,CAvCD;;AAyCA,eAAeD,WAAf","sourcesContent":["\nimport CartActionTypes from './cart.types';\nimport {addItemToCart, removeItem } from './cart.utils'\n\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch(action.type){\n\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden\n      };\n\n    case CartActionTypes.ADD_ITEM:\n      return {\n        ...state,\n        //add items already in cart then new item to the end of the array from the payload\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.REMOVE_ITEM:\n      return{\n        ...state,\n        cartItems: removeItem(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.REMOVE_ITEM_FROM_CART:\n\n      return {\n        ...state, //filter returns true or false\n        cartItems: state.cartItems.filter(\n          cartItem => cartItem.id !== action.payload.id \n        )\n      };\n    case CartActionTypes.CLEAR_CART:\n      return{\n        ...state,\n        cartItem: []\n      };\n    \n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}