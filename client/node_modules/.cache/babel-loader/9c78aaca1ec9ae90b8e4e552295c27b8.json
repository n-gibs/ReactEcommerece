{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBgCs-cvoWv7sIAtZ7jAYj5U6-yLMidLjY\",\n  authDomain: \"clothing-db-bd744.firebaseapp.com\",\n  databaseURL: \"https://clothing-db-bd744.firebaseio.com\",\n  projectId: \"clothing-db-bd744\",\n  storageBucket: \"clothing-db-bd744.appspot.com\",\n  messagingSenderId: \"365740891721\",\n  appId: \"1:365740891721:web:d75e4708a4283c793d2998\",\n  measurementId: \"G-JH3Y9ZDDPN\"\n}; //create user in firebase\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`); //get snapshot\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const adCollectionAndDocs = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  console.log(transformedCollection);\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); //for google auth\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n}); //only has google signin popup\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/nicolegibson/TrainingRepos/clothing-ecomm/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","adCollectionAndDocs","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\n\nconst config = {\n    apiKey: \"AIzaSyBgCs-cvoWv7sIAtZ7jAYj5U6-yLMidLjY\",\n    authDomain: \"clothing-db-bd744.firebaseapp.com\",\n    databaseURL: \"https://clothing-db-bd744.firebaseio.com\",\n    projectId: \"clothing-db-bd744\",\n    storageBucket: \"clothing-db-bd744.appspot.com\",\n    messagingSenderId: \"365740891721\",\n    appId: \"1:365740891721:web:d75e4708a4283c793d2998\",\n    measurementId: \"G-JH3Y9ZDDPN\"\n  };\n\n//create user in firebase\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if(!userAuth) return;\n  \n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  //get snapshot\n  const snapShot = await userRef.get();\n\n  if(!snapShot.exists){\n    const{displayName, email} = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      })\n    }catch(error){\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n  \n};\n\nexport const adCollectionAndDocs = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => { const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n\n  return await batch.commit();\n};\n\nexport const convertCollectionsSnapshotToMap = (collections) => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {title, items} = doc.data(); \n\n    return{\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title, \n      items\n    };\n   });\n\n   console.log(transformedCollection);\n};\n\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n//for google auth\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account'});\n\n//only has google signin popup\nexport const signInWithGoogle =() => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}